export const id=557;export const ids=[557];export const modules={53:(t,r,a)=>{a.d(r,{A:()=>n});var e=a(4507);const n=function(t){return(0,e.A)(t,4)}},1953:(t,r,a)=>{a.d(r,{IU:()=>S,Jo:()=>W,T_:()=>E,g0:()=>u,jP:()=>R});var e=a(6578),n=a(8496),s=a(8252),i=a(7323),d=a(798),o=a(9163),l=(0,d.K2)(((t,r,a,e)=>{r.forEach((r=>{x[r](t,a,e)}))}),"insertMarkers"),c=(0,d.K2)(((t,r,a)=>{d.Rm.trace("Making markers for ",a),t.append("defs").append("marker").attr("id",a+"_"+r+"-extensionStart").attr("class","marker extension "+r).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),t.append("defs").append("marker").attr("id",a+"_"+r+"-extensionEnd").attr("class","marker extension "+r).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")}),"extension"),p=(0,d.K2)(((t,r,a)=>{t.append("defs").append("marker").attr("id",a+"_"+r+"-compositionStart").attr("class","marker composition "+r).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+r+"-compositionEnd").attr("class","marker composition "+r).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")}),"composition"),h=(0,d.K2)(((t,r,a)=>{t.append("defs").append("marker").attr("id",a+"_"+r+"-aggregationStart").attr("class","marker aggregation "+r).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+r+"-aggregationEnd").attr("class","marker aggregation "+r).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")}),"aggregation"),m=(0,d.K2)(((t,r,a)=>{t.append("defs").append("marker").attr("id",a+"_"+r+"-dependencyStart").attr("class","marker dependency "+r).attr("refX",6).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+r+"-dependencyEnd").attr("class","marker dependency "+r).attr("refX",13).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")}),"dependency"),g=(0,d.K2)(((t,r,a)=>{t.append("defs").append("marker").attr("id",a+"_"+r+"-lollipopStart").attr("class","marker lollipop "+r).attr("refX",13).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6),t.append("defs").append("marker").attr("id",a+"_"+r+"-lollipopEnd").attr("class","marker lollipop "+r).attr("refX",1).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6)}),"lollipop"),k=(0,d.K2)(((t,r,a)=>{t.append("marker").attr("id",a+"_"+r+"-pointEnd").attr("class","marker "+r).attr("viewBox","0 0 10 10").attr("refX",6).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+r+"-pointStart").attr("class","marker "+r).attr("viewBox","0 0 10 10").attr("refX",4.5).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")}),"point"),f=(0,d.K2)(((t,r,a)=>{t.append("marker").attr("id",a+"_"+r+"-circleEnd").attr("class","marker "+r).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+r+"-circleStart").attr("class","marker "+r).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")}),"circle"),y=(0,d.K2)(((t,r,a)=>{t.append("marker").attr("id",a+"_"+r+"-crossEnd").attr("class","marker cross "+r).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+r+"-crossStart").attr("class","marker cross "+r).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")}),"cross"),b=(0,d.K2)(((t,r,a)=>{t.append("defs").append("marker").attr("id",a+"_"+r+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")}),"barb"),x={extension:c,composition:p,aggregation:h,dependency:m,lollipop:g,point:k,circle:f,cross:y,barb:b},u=l,L=(0,d.K2)(((t,r,a,e,n)=>{r.arrowTypeStart&&M(t,"start",r.arrowTypeStart,a,e,n),r.arrowTypeEnd&&M(t,"end",r.arrowTypeEnd,a,e,n)}),"addEdgeMarkers"),w={arrow_cross:"cross",arrow_point:"point",arrow_barb:"barb",arrow_circle:"circle",aggregation:"aggregation",extension:"extension",composition:"composition",dependency:"dependency",lollipop:"lollipop"},M=(0,d.K2)(((t,r,a,e,n,s)=>{const i=w[a];if(!i)return void d.Rm.warn(`Unknown arrow type: ${a}`);const o="start"===r?"Start":"End";t.attr(`marker-${r}`,`url(${e}#${n}_${s}-${i}${o})`)}),"addEdgeMarker"),_={},$={},S=(0,d.K2)((()=>{_={},$={}}),"clear"),R=(0,d.K2)(((t,r)=>{const a=(0,d.D7)(),n=(0,d._3)(a.flowchart.htmlLabels),i="markdown"===r.labelType?(0,s.GZ)(t,r.label,{style:r.labelStyle,useHtmlLabels:n,addSvgBackground:!0},a):(0,e.DA)(r.label,r.labelStyle),l=t.insert("g").attr("class","edgeLabel"),c=l.insert("g").attr("class","label");c.node().appendChild(i);let p,h=i.getBBox();if(n){const t=i.children[0],r=(0,o.Ltv)(i);h=t.getBoundingClientRect(),r.attr("width",h.width),r.attr("height",h.height)}if(c.attr("transform","translate("+-h.width/2+", "+-h.height/2+")"),_[r.id]=l,r.width=h.width,r.height=h.height,r.startLabelLeft){const a=(0,e.DA)(r.startLabelLeft,r.labelStyle),n=t.insert("g").attr("class","edgeTerminals"),s=n.insert("g").attr("class","inner");p=s.node().appendChild(a);const i=a.getBBox();s.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),$[r.id]||($[r.id]={}),$[r.id].startLeft=n,K(p,r.startLabelLeft)}if(r.startLabelRight){const a=(0,e.DA)(r.startLabelRight,r.labelStyle),n=t.insert("g").attr("class","edgeTerminals"),s=n.insert("g").attr("class","inner");p=n.node().appendChild(a),s.node().appendChild(a);const i=a.getBBox();s.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),$[r.id]||($[r.id]={}),$[r.id].startRight=n,K(p,r.startLabelRight)}if(r.endLabelLeft){const a=(0,e.DA)(r.endLabelLeft,r.labelStyle),n=t.insert("g").attr("class","edgeTerminals"),s=n.insert("g").attr("class","inner");p=s.node().appendChild(a);const i=a.getBBox();s.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),n.node().appendChild(a),$[r.id]||($[r.id]={}),$[r.id].endLeft=n,K(p,r.endLabelLeft)}if(r.endLabelRight){const a=(0,e.DA)(r.endLabelRight,r.labelStyle),n=t.insert("g").attr("class","edgeTerminals"),s=n.insert("g").attr("class","inner");p=s.node().appendChild(a);const i=a.getBBox();s.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),n.node().appendChild(a),$[r.id]||($[r.id]={}),$[r.id].endRight=n,K(p,r.endLabelRight)}return i}),"insertEdgeLabel");function K(t,r){(0,d.D7)().flowchart.htmlLabels&&t&&(t.style.width=9*r.length+"px",t.style.height="12px")}(0,d.K2)(K,"setTerminalWidth");var E=(0,d.K2)(((t,r)=>{d.Rm.debug("Moving label abc88 ",t.id,t.label,_[t.id],r);let a=r.updatedPath?r.updatedPath:r.originalPath;const e=(0,d.D7)(),{subGraphTitleTotalMargin:s}=(0,n.O)(e);if(t.label){const e=_[t.id];let n=t.x,o=t.y;if(a){const e=i._K.calcLabelPosition(a);d.Rm.debug("Moving label "+t.label+" from (",n,",",o,") to (",e.x,",",e.y,") abc88"),r.updatedPath&&(n=e.x,o=e.y)}e.attr("transform",`translate(${n}, ${o+s/2})`)}if(t.startLabelLeft){const r=$[t.id].startLeft;let e=t.x,n=t.y;if(a){const r=i._K.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_left",a);e=r.x,n=r.y}r.attr("transform",`translate(${e}, ${n})`)}if(t.startLabelRight){const r=$[t.id].startRight;let e=t.x,n=t.y;if(a){const r=i._K.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_right",a);e=r.x,n=r.y}r.attr("transform",`translate(${e}, ${n})`)}if(t.endLabelLeft){const r=$[t.id].endLeft;let e=t.x,n=t.y;if(a){const r=i._K.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_left",a);e=r.x,n=r.y}r.attr("transform",`translate(${e}, ${n})`)}if(t.endLabelRight){const r=$[t.id].endRight;let e=t.x,n=t.y;if(a){const r=i._K.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_right",a);e=r.x,n=r.y}r.attr("transform",`translate(${e}, ${n})`)}}),"positionEdgeLabel"),v=(0,d.K2)(((t,r)=>{const a=t.x,e=t.y,n=Math.abs(r.x-a),s=Math.abs(r.y-e),i=t.width/2,d=t.height/2;return n>=i||s>=d}),"outsideNode"),P=(0,d.K2)(((t,r,a)=>{d.Rm.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(r)}\n  insidePoint : ${JSON.stringify(a)}\n  node        : x:${t.x} y:${t.y} w:${t.width} h:${t.height}`);const e=t.x,n=t.y,s=Math.abs(e-a.x),i=t.width/2;let o=a.x<r.x?i-s:i+s;const l=t.height/2,c=Math.abs(r.y-a.y),p=Math.abs(r.x-a.x);if(Math.abs(n-r.y)*i>Math.abs(e-r.x)*l){let t=a.y<r.y?r.y-l-n:n-l-r.y;o=p*t/c;const e={x:a.x<r.x?a.x+o:a.x-p+o,y:a.y<r.y?a.y+c-t:a.y-c+t};return 0===o&&(e.x=r.x,e.y=r.y),0===p&&(e.x=r.x),0===c&&(e.y=r.y),d.Rm.debug(`abc89 topp/bott calc, Q ${c}, q ${t}, R ${p}, r ${o}`,e),e}{o=a.x<r.x?r.x-i-e:e-i-r.x;let t=c*o/p,n=a.x<r.x?a.x+p-o:a.x-p+o,s=a.y<r.y?a.y+t:a.y-t;return d.Rm.debug(`sides calc abc89, Q ${c}, q ${t}, R ${p}, r ${o}`,{_x:n,_y:s}),0===o&&(n=r.x,s=r.y),0===p&&(n=r.x),0===c&&(s=r.y),{x:n,y:s}}}),"intersection"),T=(0,d.K2)(((t,r)=>{d.Rm.debug("abc88 cutPathAtIntersect",t,r);let a=[],e=t[0],n=!1;return t.forEach((t=>{if(v(r,t)||n)e=t,n||a.push(t);else{const s=P(r,e,t);let i=!1;a.forEach((t=>{i=i||t.x===s.x&&t.y===s.y})),a.some((t=>t.x===s.x&&t.y===s.y))||a.push(s),n=!0}})),a}),"cutPathAtIntersect"),W=(0,d.K2)((function(t,r,a,e,s,i,l){let c=a.points;d.Rm.debug("abc88 InsertEdge: edge=",a,"e=",r);let p=!1;const h=i.node(r.v);var m=i.node(r.w);m?.intersect&&h?.intersect&&(c=c.slice(1,a.points.length-1),c.unshift(h.intersect(c[0])),c.push(m.intersect(c[c.length-1]))),a.toCluster&&(d.Rm.debug("to cluster abc88",e[a.toCluster]),c=T(a.points,e[a.toCluster].node),p=!0),a.fromCluster&&(d.Rm.debug("from cluster abc88",e[a.fromCluster]),c=T(c.reverse(),e[a.fromCluster].node).reverse(),p=!0);const g=c.filter((t=>!Number.isNaN(t.y)));let k=o.qrM;!a.curve||"graph"!==s&&"flowchart"!==s||(k=a.curve);const{x:f,y}=(0,n.R)(a),b=(0,o.n8j)().x(f).y(y).curve(k);let x;switch(a.thickness){case"normal":x="edge-thickness-normal";break;case"thick":case"invisible":x="edge-thickness-thick";break;default:x=""}switch(a.pattern){case"solid":x+=" edge-pattern-solid";break;case"dotted":x+=" edge-pattern-dotted";break;case"dashed":x+=" edge-pattern-dashed"}const u=t.append("path").attr("d",b(g)).attr("id",a.id).attr("class"," "+x+(a.classes?" "+a.classes:"")).attr("style",a.style);let w="";((0,d.D7)().flowchart.arrowMarkerAbsolute||(0,d.D7)().state.arrowMarkerAbsolute)&&(w=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,w=w.replace(/\(/g,"\\("),w=w.replace(/\)/g,"\\)")),L(u,a,w,l,s);let M={};return p&&(M.updatedPath=c),M.originalPath=a.points,M}),"insertEdge")}};