export const id=627;export const ids=[627];export const modules={2627:(t,e,r)=>{r.d(e,{diagram:()=>nt});var i=r(7323),a=r(798),n=r(9163),s=function(){var t=(0,a.K2)((function(t,e,r,i){for(r=r||{},i=t.length;i--;r[t[i]]=e);return r}),"o"),e=[1,3],r=[1,6],i=[1,4],n=[1,5],s=[2,5],c=[1,12],o=[5,7,13,19,21,23,24,26,28,31,36,39,48],l=[7,13,19,21,23,24,26,28,31,36,39],h=[7,12,13,19,21,23,24,26,28,31,36,39],m=[7,13,48],y=[1,42],u=[1,41],g=[1,49],p=[7,13,29,32,37,45,48],$=[1,57],d=[1,59],b=[1,60],f=[1,61],x=[7,13,32,41,45,48],k=[7,13,32,34,37,41,45,48],_={trace:(0,a.K2)((function(){}),"trace"),yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,commitTags:35,MERGE:36,COMMIT_TYPE:37,commitType:38,COMMIT:39,commit_arg:40,COMMIT_MSG:41,NORMAL:42,REVERSE:43,HIGHLIGHT:44,COMMIT_TAG:45,EMPTYSTR:46,ID:47,";":48,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",36:"MERGE",37:"COMMIT_TYPE",39:"COMMIT",41:"COMMIT_MSG",42:"NORMAL",43:"REVERSE",44:"HIGHLIGHT",45:"COMMIT_TAG",46:"EMPTYSTR",47:"ID",48:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,4],[18,6],[18,6],[18,4],[18,6],[17,2],[17,4],[17,4],[17,3],[17,5],[17,5],[17,5],[17,6],[17,5],[17,6],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[16,2],[16,2],[16,3],[16,4],[16,4],[16,3],[16,4],[16,4],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,3],[16,4],[16,4],[16,5],[16,5],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[40,0],[40,1],[38,1],[38,1],[38,1],[35,2],[35,2],[35,3],[35,3],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:(0,a.K2)((function(t,e,r,i,a,n,s){var c=n.length-1;switch(a){case 2:return n[c];case 3:return n[c-1];case 4:return i.setDirection(n[c-3]),n[c-1];case 6:i.setOptions(n[c-1]),this.$=n[c];break;case 7:n[c-1]+=n[c],this.$=n[c-1];break;case 9:this.$=[];break;case 10:n[c-1].push(n[c]),this.$=n[c-1];break;case 11:this.$=n[c-1];break;case 16:this.$=n[c].trim(),i.setAccTitle(this.$);break;case 17:case 18:this.$=n[c].trim(),i.setAccDescription(this.$);break;case 19:i.addSection(n[c].substr(8)),this.$=n[c].substr(8);break;case 21:i.checkout(n[c]);break;case 22:i.branch(n[c]);break;case 23:i.branch(n[c-2],n[c]);break;case 24:i.cherryPick(n[c],"",void 0);break;case 25:i.cherryPick(n[c-2],"",void 0,n[c]);break;case 26:i.cherryPick(n[c-1],"",n[c]);break;case 27:i.cherryPick(n[c-3],"",n[c],n[c-1]);break;case 28:i.cherryPick(n[c-3],"",n[c-2],n[c]);break;case 29:i.cherryPick(n[c],"",n[c-2]);break;case 30:i.cherryPick(n[c-2],"",n[c-4],n[c]);break;case 31:i.merge(n[c],"","",void 0);break;case 32:i.merge(n[c-2],n[c],"",void 0);break;case 33:i.merge(n[c-2],"",n[c],void 0);break;case 34:i.merge(n[c-1],"","",n[c]);break;case 35:i.merge(n[c-3],n[c],"",n[c-2]);break;case 36:i.merge(n[c-3],"",n[c],n[c-2]);break;case 37:i.merge(n[c-3],"",n[c-1],n[c]);break;case 38:i.merge(n[c-4],n[c-2],n[c],void 0);break;case 39:i.merge(n[c-3],n[c-1],"",n[c]);break;case 40:i.merge(n[c-4],n[c],n[c-2],void 0);break;case 41:i.merge(n[c-5],n[c-3],n[c-1],n[c]);break;case 42:i.merge(n[c-5],n[c],n[c-3],n[c-2]);break;case 43:i.merge(n[c-5],n[c-3],n[c],n[c-2]);break;case 44:i.merge(n[c-5],n[c-1],n[c-3],n[c]);break;case 45:i.merge(n[c-5],n[c],n[c-2],n[c-4]);break;case 46:i.merge(n[c-5],n[c-2],n[c],n[c-4]);break;case 47:i.commit(n[c]);break;case 48:i.commit("","",i.commitType.NORMAL,n[c]);break;case 49:i.commit("","",n[c],void 0);break;case 50:i.commit("","",n[c],n[c-2]);break;case 51:i.commit("","",n[c-1],n[c]);break;case 52:i.commit("",n[c],i.commitType.NORMAL,void 0);break;case 53:i.commit("",n[c-1],i.commitType.NORMAL,n[c]);break;case 54:i.commit("",n[c],i.commitType.NORMAL,n[c-2]);break;case 55:i.commit("",n[c-2],n[c],void 0);break;case 56:i.commit("",n[c],n[c-2],void 0);break;case 57:i.commit("",n[c-3],n[c-1],n[c]);break;case 58:i.commit("",n[c-3],n[c],n[c-2]);break;case 59:i.commit("",n[c-1],n[c-3],n[c]);break;case 60:i.commit("",n[c],n[c-3],n[c-2]);break;case 61:i.commit("",n[c],n[c-2],n[c-4]);break;case 62:i.commit("",n[c-2],n[c],n[c-4]);break;case 63:i.commit(n[c],"",i.commitType.NORMAL,void 0);break;case 64:i.commit(n[c],"",i.commitType.NORMAL,n[c-2]);break;case 65:i.commit(n[c-1],"",i.commitType.NORMAL,n[c]);break;case 66:i.commit(n[c-2],"",n[c],void 0);break;case 67:i.commit(n[c],"",n[c-2],void 0);break;case 68:i.commit(n[c],n[c-2],i.commitType.NORMAL,void 0);break;case 69:i.commit(n[c-2],n[c],i.commitType.NORMAL,void 0);break;case 70:i.commit(n[c-3],"",n[c-1],n[c]);break;case 71:i.commit(n[c-3],"",n[c],n[c-2]);break;case 72:i.commit(n[c-1],"",n[c-3],n[c]);break;case 73:i.commit(n[c],"",n[c-3],n[c-2]);break;case 74:i.commit(n[c],"",n[c-2],n[c-4]);break;case 75:i.commit(n[c-2],"",n[c],n[c-4]);break;case 76:i.commit(n[c-4],n[c],n[c-2],void 0);break;case 77:i.commit(n[c-4],n[c-2],n[c],void 0);break;case 78:i.commit(n[c-2],n[c],n[c-4],void 0);break;case 79:i.commit(n[c],n[c-2],n[c-4],void 0);break;case 80:i.commit(n[c],n[c-4],n[c-2],void 0);break;case 81:i.commit(n[c-2],n[c-4],n[c],void 0);break;case 82:i.commit(n[c-3],n[c],i.commitType.NORMAL,n[c-2]);break;case 83:i.commit(n[c-3],n[c-1],i.commitType.NORMAL,n[c]);break;case 84:i.commit(n[c-2],n[c],i.commitType.NORMAL,n[c-4]);break;case 85:i.commit(n[c],n[c-2],i.commitType.NORMAL,n[c-4]);break;case 86:i.commit(n[c],n[c-3],i.commitType.NORMAL,n[c-2]);break;case 87:i.commit(n[c-1],n[c-3],i.commitType.NORMAL,n[c]);break;case 88:i.commit(n[c-5],n[c-3],n[c-1],n[c]);break;case 89:i.commit(n[c-5],n[c-3],n[c],n[c-2]);break;case 90:i.commit(n[c-5],n[c-1],n[c-3],n[c]);break;case 91:i.commit(n[c-5],n[c],n[c-3],n[c-2]);break;case 92:i.commit(n[c-5],n[c-2],n[c],n[c-4]);break;case 93:i.commit(n[c-5],n[c],n[c-2],n[c-4]);break;case 94:i.commit(n[c-3],n[c-5],n[c-1],n[c]);break;case 95:i.commit(n[c-3],n[c-5],n[c],n[c-2]);break;case 96:i.commit(n[c-1],n[c-5],n[c-3],n[c]);break;case 97:i.commit(n[c],n[c-5],n[c-3],n[c-2]);break;case 98:i.commit(n[c-2],n[c-5],n[c],n[c-4]);break;case 99:i.commit(n[c],n[c-5],n[c-2],n[c-4]);break;case 100:i.commit(n[c],n[c-4],n[c-2],n[c-6]);break;case 101:i.commit(n[c-2],n[c-4],n[c],n[c-6]);break;case 102:i.commit(n[c],n[c-2],n[c-4],n[c-6]);break;case 103:i.commit(n[c-2],n[c],n[c-4],n[c-6]);break;case 104:i.commit(n[c-4],n[c-2],n[c],n[c-6]);break;case 105:i.commit(n[c-4],n[c],n[c-2],n[c-6]);break;case 106:i.commit(n[c-1],n[c-3],n[c-5],n[c]);break;case 107:i.commit(n[c],n[c-3],n[c-5],n[c-2]);break;case 108:i.commit(n[c-2],n[c],n[c-5],n[c-4]);break;case 109:i.commit(n[c],n[c-2],n[c-5],n[c-4]);break;case 110:i.commit(n[c-3],n[c-1],n[c-5],n[c]);break;case 111:i.commit(n[c-3],n[c],n[c-5],n[c-2]);break;case 112:this.$="";break;case 113:this.$=n[c];break;case 114:this.$=i.commitType.NORMAL;break;case 115:this.$=i.commitType.REVERSE;break;case 116:this.$=i.commitType.HIGHLIGHT;break;case 117:this.$=[n[c]];break;case 118:this.$=[""];break;case 119:n[c-2].push(n[c]),this.$=n[c-2];break;case 120:n[c-2].push(""),this.$=n[c-2]}}),"anonymous"),table:[{3:1,4:2,5:e,7:r,13:i,48:n},{1:[3]},{3:7,4:2,5:e,7:r,13:i,48:n},{6:8,7:s,8:[1,9],9:[1,10],10:11,13:c},t(o,[2,123]),t(o,[2,124]),t(o,[2,125]),{1:[2,1]},{7:[1,13]},{6:14,7:s,10:11,13:c},{8:[1,15]},t(l,[2,9],{11:16,12:[1,17]}),t(h,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:s,10:11,13:c},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],36:[1,33],39:[1,32]},t(h,[2,7]),{1:[2,3]},{7:[1,36]},t(l,[2,10]),{4:37,7:r,13:i,48:n},t(l,[2,12]),t(m,[2,13]),t(m,[2,14]),t(m,[2,15]),{20:[1,38]},{22:[1,39]},t(m,[2,18]),t(m,[2,19]),t(m,[2,20]),{27:40,33:y,47:u},t(m,[2,112],{40:43,35:44,32:[1,46],33:[1,48],37:[1,45],41:[1,47],45:g}),{27:50,33:y,47:u},{32:[1,51],35:52,45:g},{27:53,33:y,47:u},{1:[2,4]},t(l,[2,11]),t(m,[2,16]),t(m,[2,17]),t(m,[2,21]),t(p,[2,121]),t(p,[2,122]),t(m,[2,47]),t(m,[2,48],{32:[1,55],37:[1,54],41:[1,56],45:$}),{38:58,42:d,43:b,44:f},{33:[1,62]},{33:[1,63]},t(m,[2,113]),{33:[1,64],46:[1,65]},t(m,[2,31],{35:68,32:[1,66],37:[1,67],45:g}),{33:[1,69]},{32:[1,70],45:$},t(m,[2,22],{29:[1,71]}),{38:72,42:d,43:b,44:f},{33:[1,73]},{33:[1,74]},{33:[1,75],46:[1,76]},t(m,[2,49],{35:77,32:[1,78],41:[1,79],45:g}),t(x,[2,114]),t(x,[2,115]),t(x,[2,116]),t(m,[2,52],{35:80,37:[1,81],41:[1,82],45:g}),t(m,[2,63],{35:83,32:[1,85],37:[1,84],45:g}),t(k,[2,117]),t(k,[2,118]),{33:[1,86]},{38:87,42:d,43:b,44:f},t(m,[2,34],{32:[1,88],37:[1,89],45:$}),t(m,[2,24],{35:91,34:[1,90],45:g}),{33:[1,92]},{30:[1,93]},t(m,[2,50],{32:[1,94],41:[1,95]}),t(m,[2,54],{37:[1,96],41:[1,97]}),t(m,[2,64],{32:[1,99],37:[1,98]}),t(k,[2,119]),t(k,[2,120]),t(m,[2,51],{32:[1,100],41:[1,101],45:$}),{33:[1,102]},{33:[1,103]},t(m,[2,53],{37:[1,104],41:[1,105],45:$}),{38:106,42:d,43:b,44:f},{33:[1,107]},t(m,[2,65],{32:[1,109],37:[1,108],45:$}),{38:110,42:d,43:b,44:f},{33:[1,111]},t(m,[2,32],{35:113,37:[1,112],45:g}),t(m,[2,33],{35:114,32:[1,115],45:g}),{33:[1,116]},{38:117,42:d,43:b,44:f},{33:[1,118]},t(m,[2,26],{34:[1,119],45:$}),t(m,[2,29],{34:[1,120]}),t(m,[2,23]),{33:[1,121]},{33:[1,122]},{38:123,42:d,43:b,44:f},{33:[1,124]},{38:125,42:d,43:b,44:f},{33:[1,126]},{33:[1,127]},{33:[1,128]},t(m,[2,56],{35:129,41:[1,130],45:g}),t(m,[2,67],{35:131,32:[1,132],45:g}),{38:133,42:d,43:b,44:f},{33:[1,134]},t(m,[2,55],{35:135,41:[1,136],45:g}),t(m,[2,68],{35:138,37:[1,137],45:g}),{38:139,42:d,43:b,44:f},{33:[1,140]},t(m,[2,66],{35:141,32:[1,142],45:g}),t(m,[2,69],{35:144,37:[1,143],45:g}),{38:145,42:d,43:b,44:f},t(m,[2,39],{37:[1,146],45:$}),t(m,[2,37],{32:[1,147],45:$}),{33:[1,148]},t(m,[2,35],{37:[1,149]}),t(m,[2,36],{32:[1,150]}),t(m,[2,25],{35:151,45:g}),{33:[1,152]},{33:[1,153]},t(m,[2,61],{41:[1,154]}),t(m,[2,74],{32:[1,155]}),t(m,[2,62],{41:[1,156]}),t(m,[2,85],{37:[1,157]}),t(m,[2,75],{32:[1,158]}),t(m,[2,84],{37:[1,159]}),t(m,[2,60],{41:[1,160]}),t(m,[2,73],{32:[1,161]}),t(m,[2,59],{41:[1,162],45:$}),{33:[1,163]},t(m,[2,72],{32:[1,164],45:$}),{33:[1,165]},t(m,[2,58],{41:[1,166]}),t(m,[2,86],{37:[1,167]}),t(m,[2,57],{41:[1,168],45:$}),{33:[1,169]},{38:170,42:d,43:b,44:f},t(m,[2,87],{37:[1,171],45:$}),t(m,[2,71],{32:[1,172]}),t(m,[2,82],{37:[1,173]}),t(m,[2,70],{32:[1,174],45:$}),{33:[1,175]},{38:176,42:d,43:b,44:f},t(m,[2,83],{37:[1,177],45:$}),t(m,[2,38],{35:178,45:g}),{38:179,42:d,43:b,44:f},{33:[1,180]},t(m,[2,40],{35:181,45:g}),{38:182,42:d,43:b,44:f},{33:[1,183]},t(m,[2,27],{45:$}),t(m,[2,28]),t(m,[2,30]),{33:[1,184]},{33:[1,185]},{33:[1,186]},{38:187,42:d,43:b,44:f},{33:[1,188]},{38:189,42:d,43:b,44:f},{33:[1,190]},{33:[1,191]},{33:[1,192]},t(m,[2,79],{35:193,45:g}),{33:[1,194]},t(m,[2,78],{35:195,45:g}),{33:[1,196]},{38:197,42:d,43:b,44:f},{33:[1,198]},t(m,[2,80],{35:199,45:g}),t(m,[2,81],{35:200,45:g}),{38:201,42:d,43:b,44:f},{33:[1,202]},{38:203,42:d,43:b,44:f},{33:[1,204]},t(m,[2,76],{35:205,45:g}),t(m,[2,77],{35:206,45:g}),{38:207,42:d,43:b,44:f},t(m,[2,41],{45:$}),t(m,[2,43]),t(m,[2,42]),t(m,[2,44],{45:$}),t(m,[2,46]),t(m,[2,45]),t(m,[2,102]),t(m,[2,103]),t(m,[2,100]),t(m,[2,101]),t(m,[2,105]),t(m,[2,104]),t(m,[2,109]),t(m,[2,108]),t(m,[2,107]),t(m,[2,106],{45:$}),t(m,[2,111]),t(m,[2,110],{45:$}),t(m,[2,99]),t(m,[2,98]),t(m,[2,97]),t(m,[2,96],{45:$}),t(m,[2,94],{45:$}),t(m,[2,95]),t(m,[2,93]),t(m,[2,92]),t(m,[2,91]),t(m,[2,90],{45:$}),t(m,[2,88],{45:$}),t(m,[2,89])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:(0,a.K2)((function(t,e){if(!e.recoverable){var r=new Error(t);throw r.hash=e,r}this.trace(t)}),"parseError"),parse:(0,a.K2)((function(t){var e=this,r=[0],i=[],n=[null],s=[],c=this.table,o="",l=0,h=0,m=0,y=s.slice.call(arguments,1),u=Object.create(this.lexer),g={yy:{}};for(var p in this.yy)Object.prototype.hasOwnProperty.call(this.yy,p)&&(g.yy[p]=this.yy[p]);u.setInput(t,g.yy),g.yy.lexer=u,g.yy.parser=this,void 0===u.yylloc&&(u.yylloc={});var $=u.yylloc;s.push($);var d=u.options&&u.options.ranges;function b(){var t;return"number"!=typeof(t=i.pop()||u.lex()||1)&&(t instanceof Array&&(t=(i=t).pop()),t=e.symbols_[t]||t),t}"function"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError,(0,a.K2)((function(t){r.length=r.length-2*t,n.length=n.length-t,s.length=s.length-t}),"popStack"),(0,a.K2)(b,"lex");for(var f,x,k,_,T,w,L,v,M,E={};;){if(k=r[r.length-1],this.defaultActions[k]?_=this.defaultActions[k]:(null==f&&(f=b()),_=c[k]&&c[k][f]),void 0===_||!_.length||!_[0]){var R;for(w in M=[],c[k])this.terminals_[w]&&w>2&&M.push("'"+this.terminals_[w]+"'");R=u.showPosition?"Parse error on line "+(l+1)+":\n"+u.showPosition()+"\nExpecting "+M.join(", ")+", got '"+(this.terminals_[f]||f)+"'":"Parse error on line "+(l+1)+": Unexpected "+(1==f?"end of input":"'"+(this.terminals_[f]||f)+"'"),this.parseError(R,{text:u.match,token:this.terminals_[f]||f,line:u.yylineno,loc:$,expected:M})}if(_[0]instanceof Array&&_.length>1)throw new Error("Parse Error: multiple actions possible at state: "+k+", token: "+f);switch(_[0]){case 1:r.push(f),n.push(u.yytext),s.push(u.yylloc),r.push(_[1]),f=null,x?(f=x,x=null):(h=u.yyleng,o=u.yytext,l=u.yylineno,$=u.yylloc,m>0&&m--);break;case 2:if(L=this.productions_[_[1]][1],E.$=n[n.length-L],E._$={first_line:s[s.length-(L||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(L||1)].first_column,last_column:s[s.length-1].last_column},d&&(E._$.range=[s[s.length-(L||1)].range[0],s[s.length-1].range[1]]),void 0!==(T=this.performAction.apply(E,[o,h,l,g.yy,_[1],n,s].concat(y))))return T;L&&(r=r.slice(0,-1*L*2),n=n.slice(0,-1*L),s=s.slice(0,-1*L)),r.push(this.productions_[_[1]][0]),n.push(E.$),s.push(E._$),v=c[r[r.length-2]][r[r.length-1]],r.push(v);break;case 3:return!0}}return!0}),"parse")},T=function(){return{EOF:1,parseError:(0,a.K2)((function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)}),"parseError"),setInput:(0,a.K2)((function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this}),"setInput"),input:(0,a.K2)((function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t}),"input"),unput:(0,a.K2)((function(t){var e=t.length,r=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var a=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===i.length?this.yylloc.first_column:0)+i[i.length-r.length].length-r[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[a[0],a[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this}),"unput"),more:(0,a.K2)((function(){return this._more=!0,this}),"more"),reject:(0,a.K2)((function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}),"reject"),less:(0,a.K2)((function(t){this.unput(this.match.slice(t))}),"less"),pastInput:(0,a.K2)((function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")}),"pastInput"),upcomingInput:(0,a.K2)((function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")}),"upcomingInput"),showPosition:(0,a.K2)((function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"}),"showPosition"),test_match:(0,a.K2)((function(t,e){var r,i,a;if(this.options.backtrack_lexer&&(a={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(a.yylloc.range=this.yylloc.range.slice(0))),(i=t[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=i.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:i?i[i.length-1].length-i[i.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],r=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack){for(var n in a)this[n]=a[n];return!1}return!1}),"test_match"),next:(0,a.K2)((function(){if(this.done)return this.EOF;var t,e,r,i;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var a=this._currentRules(),n=0;n<a.length;n++)if((r=this._input.match(this.rules[a[n]]))&&(!e||r[0].length>e[0].length)){if(e=r,i=n,this.options.backtrack_lexer){if(!1!==(t=this.test_match(r,a[n])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,a[i]))&&t:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})}),"next"),lex:(0,a.K2)((function(){return this.next()||this.lex()}),"lex"),begin:(0,a.K2)((function(t){this.conditionStack.push(t)}),"begin"),popState:(0,a.K2)((function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]}),"popState"),_currentRules:(0,a.K2)((function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules}),"_currentRules"),topState:(0,a.K2)((function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:"INITIAL"}),"topState"),pushState:(0,a.K2)((function(t){this.begin(t)}),"pushState"),stateStackSize:(0,a.K2)((function(){return this.conditionStack.length}),"stateStackSize"),options:{"case-insensitive":!0},performAction:(0,a.K2)((function(t,e,r,i){switch(r){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:case 31:case 35:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:case 9:case 40:break;case 10:return 5;case 11:return 39;case 12:return 32;case 13:return 37;case 14:return 41;case 15:return 42;case 16:return 43;case 17:return 44;case 18:return 45;case 19:return 28;case 20:return 29;case 21:return 36;case 22:return 31;case 23:return 34;case 24:return 26;case 25:case 26:case 27:return 9;case 28:return 8;case 29:return"CARET";case 30:this.begin("options");break;case 32:return 12;case 33:return 46;case 34:this.begin("string");break;case 36:return 33;case 37:return 30;case 38:return 47;case 39:return 7}}),"anonymous"),rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:\b(checkout|switch)(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[31,32],inclusive:!1},string:{rules:[35,36],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,38,39,40],inclusive:!0}}}}();function w(){this.yy={}}return _.lexer=T,(0,a.K2)(w,"Parser"),w.prototype=_,_.Parser=w,new w}();s.parser=s;var c=s,{mainBranchName:o,mainBranchOrder:l}=(0,a.D7)().gitGraph,h=new Map,m=null,y=new Map;y.set(o,{name:o,order:l});var u=new Map;u.set(o,m);var g=o,p="LR",$=0;function d(){return(0,i.yT)({length:7})}function b(t,e){const r=Object.create(null);return t.reduce(((t,i)=>{const a=e(i);return r[a]||(r[a]=!0,t.push(i)),t}),[])}(0,a.K2)(d,"getId"),(0,a.K2)(b,"uniqBy");var f=(0,a.K2)((function(t){p=t}),"setDirection"),x={},k=(0,a.K2)((function(t){a.Rm.debug("options str",t),t=t?.trim(),t=t||"{}";try{x=JSON.parse(t)}catch(t){a.Rm.error("error while parsing gitGraph options",t.message)}}),"setOptions"),_=(0,a.K2)((function(){return x}),"getOptions"),T=(0,a.K2)((function(t,e,r,i){a.Rm.debug("Entering commit:",t,e,r,i);const n=(0,a.D7)();e=a.Y2.sanitizeText(e,n),t=a.Y2.sanitizeText(t,n),i=i?.map((t=>a.Y2.sanitizeText(t,n)));const s={id:e||$+"-"+d(),message:t,seq:$++,type:r||D.NORMAL,tags:i??[],parents:null==m?[]:[m.id],branch:g};m=s,h.set(s.id,s),u.set(g,s.id),a.Rm.debug("in pushCommit "+s.id)}),"commit"),w=(0,a.K2)((function(t,e){if(t=a.Y2.sanitizeText(t,(0,a.D7)()),u.has(t)){let e=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+t+'")');throw e.hash={text:"branch "+t,token:"branch "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+t+'"']},e}u.set(t,null!=m?m.id:null),y.set(t,{name:t,order:e?parseInt(e,10):null}),M(t),a.Rm.debug("in createBranch")}),"branch"),L=(0,a.K2)((function(t,e,r,i){const n=(0,a.D7)();t=a.Y2.sanitizeText(t,n),e=a.Y2.sanitizeText(e,n);const s=h.get(u.get(g)),c=h.get(u.get(t));if(g===t){let e=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(void 0===s||!s){let e=new Error('Incorrect usage of "merge". Current branch ('+g+")has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},e}if(!u.has(t)){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") does not exist");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+t]},e}if(void 0===c||!c){let e=new Error('Incorrect usage of "merge". Branch to be merged ('+t+") has no commits");throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},e}if(s===c){let e=new Error('Incorrect usage of "merge". Both branches have same head');throw e.hash={text:"merge "+t,token:"merge "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},e}if(e&&h.has(e)){let a=new Error('Incorrect usage of "merge". Commit with id:'+e+" already exists, use different custom Id");throw a.hash={text:"merge "+t+e+r+i?.join(","),token:"merge "+t+e+r+i?.join(","),line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:[`merge ${t} ${e}_UNIQUE ${r} ${i?.join(",")}`]},a}const o={id:e||$+"-"+d(),message:"merged branch "+t+" into "+g,seq:$++,parents:[null==m?null:m.id,u.get(t)],branch:g,type:D.MERGE,customType:r,customId:!!e,tags:i||[]};m=o,h.set(o.id,o),u.set(g,o.id),a.Rm.debug(u),a.Rm.debug("in mergeBranch")}),"merge"),v=(0,a.K2)((function(t,e,r,i){a.Rm.debug("Entering cherryPick:",t,e,r);const n=(0,a.D7)();if(t=a.Y2.sanitizeText(t,n),e=a.Y2.sanitizeText(e,n),r=r?.map((t=>a.Y2.sanitizeText(t,n))),i=a.Y2.sanitizeText(i,n),!t||!h.has(t)){let r=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}let s=h.get(t),c=s.branch;if(i&&(!Array.isArray(s.parents)||!s.parents.includes(i)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(s.type===D.MERGE&&!i)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!e||!h.has(e)){if(c===g){let r=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}const n=h.get(u.get(g));if(void 0===n||!n){let r=new Error('Incorrect usage of "cherry-pick". Current branch ('+g+")has no commits");throw r.hash={text:"cherryPick "+t+" "+e,token:"cherryPick "+t+" "+e,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},r}const o={id:$+"-"+d(),message:"cherry-picked "+s+" into "+g,seq:$++,parents:[null==m?null:m.id,s.id],branch:g,type:D.CHERRY_PICK,tags:r?r.filter(Boolean):[`cherry-pick:${s.id}${s.type===D.MERGE?`|parent:${i}`:""}`]};m=o,h.set(o.id,o),u.set(g,o.id),a.Rm.debug(u),a.Rm.debug("in cherryPick")}}),"cherryPick"),M=(0,a.K2)((function(t){if(t=a.Y2.sanitizeText(t,(0,a.D7)()),!u.has(t)){let e=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+t+'")');throw e.hash={text:"checkout "+t,token:"checkout "+t,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+t+'"']},e}{g=t;const e=u.get(g);m=h.get(e)}}),"checkout");function E(t,e,r){const i=t.indexOf(e);-1===i?t.push(r):t.splice(i,1,r)}function R(t){const e=t.reduce(((t,e)=>t.seq>e.seq?t:e),t[0]);let r="";t.forEach((function(t){r+=t===e?"\t*":"\t|"}));const i=[r,e.id,e.seq];for(let t in u)u.get(t)===e.id&&i.push(t);if(a.Rm.debug(i.join(" ")),e.parents&&2==e.parents.length){const r=h.get(e.parents[0]);E(t,e,r),t.push(h.get(e.parents[1]))}else{if(0==e.parents.length)return;{const r=h.get(e.parents);E(t,e,r)}}R(t=b(t,(t=>t.id)))}(0,a.K2)(E,"upsert"),(0,a.K2)(R,"prettyPrintCommitHistory");var B=(0,a.K2)((function(){a.Rm.debug(h),R([O()[0]])}),"prettyPrint"),A=(0,a.K2)((function(){h=new Map,m=null;const{mainBranchName:t,mainBranchOrder:e}=(0,a.D7)().gitGraph;(u=new Map).set(t,null),(y=new Map).set(t,{name:t,order:e}),g=t,$=0,(0,a.IU)()}),"clear"),I=(0,a.K2)((function(){return[...y.values()].map(((t,e)=>null!==t.order?t:{...t,order:parseFloat(`0.${e}`,10)})).sort(((t,e)=>t.order-e.order)).map((({name:t})=>({name:t})))}),"getBranchesAsObjArray"),K=(0,a.K2)((function(){return u}),"getBranches"),C=(0,a.K2)((function(){return h}),"getCommits"),O=(0,a.K2)((function(){const t=[...h.values()];return t.forEach((function(t){a.Rm.debug(t.id)})),t.sort(((t,e)=>t.seq-e.seq)),t}),"getCommitsArray"),S=(0,a.K2)((function(){return g}),"getCurrentBranch"),P=(0,a.K2)((function(){return p}),"getDirection"),N=(0,a.K2)((function(){return m}),"getHead"),D={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},G={getConfig:(0,a.K2)((()=>(0,a.D7)().gitGraph),"getConfig"),setDirection:f,setOptions:k,getOptions:_,commit:T,branch:w,merge:L,cherryPick:v,checkout:M,prettyPrint:B,clear:A,getBranchesAsObjArray:I,getBranches:K,getCommits:C,getCommitsArray:O,getCurrentBranch:S,getDirection:P,getHead:N,setAccTitle:a.SV,getAccTitle:a.iN,getAccDescription:a.m7,setAccDescription:a.EI,setDiagramTitle:a.ke,getDiagramTitle:a.ab,commitType:D},H=new Map,z={},Y={},j=[],q=0,F="LR",U=(0,a.K2)((()=>{z=new Map,Y=new Map,H=new Map,q=0,j=[],F="LR"}),"clear"),V=(0,a.K2)((t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","text");let r=[];r="string"==typeof t?t.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(t)?t:[];for(const t of r){const r=document.createElementNS("http://www.w3.org/2000/svg","tspan");r.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),r.setAttribute("dy","1em"),r.setAttribute("x","0"),r.setAttribute("class","row"),r.textContent=t.trim(),e.appendChild(r)}return e}),"drawText"),W=(0,a.K2)((t=>{let e="",r=0;return t.forEach((t=>{const i="TB"===F||"BT"===F?Y.get(t).y:Y.get(t).x;i>=r&&(e=t,r=i)})),e||void 0}),"findClosestParent"),J=(0,a.K2)((t=>{let e="",r=1/0;return t.forEach((t=>{const i=Y.get(t).y;i<=r&&(e=t,r=i)})),e||void 0}),"findClosestParentBT"),Q=(0,a.K2)(((t,e,r,i,a)=>{let n=r,s=r,c=[];t.forEach((t=>{const r=e.get(t);if(r.parents.length){const t=W(r.parents);n=Y.get(t).y+i,n>=s&&(s=n)}else c.push(r);const o=z.get(r.branch).pos,l=n+a;Y.set(r.id,{x:o,y:l})})),n=s,c.forEach((t=>{const e=n+r,i=z.get(t.branch).pos;Y.set(t.id,{x:i,y:e})})),t.forEach((t=>{const r=e.get(t);if(r.parents.length){const t=J(r.parents);n=Y.get(t).y-i,n<=s&&(s=n);const e=z.get(r.branch).pos,c=n-a;Y.set(r.id,{x:e,y:c})}}))}),"setParallelBTPos"),X=(0,a.K2)(((t,e,r)=>{const i=(0,a.D7)().gitGraph,n=t.append("g").attr("class","commit-bullets"),s=t.append("g").attr("class","commit-labels");let c=0;"TB"!==F&&"BT"!==F||(c=30);const o=[...e.keys()],l=i.parallelCommits,h=10,m=40;let y="BT"!==F||"BT"===F&&l?o.sort(((t,r)=>e.get(t).seq-e.get(r).seq)):o.sort(((t,r)=>e.get(t).seq-e.get(r).seq)).reverse();"BT"===F&&l&&(Q(y,e,c,m,h),y=y.reverse()),y.forEach((t=>{const a=e.get(t);if(l)if(a.parents.length){const e="BT"===F?J(a.parents):W(a.parents);c="TB"===F?Y.get(e).y+m:"BT"===F?Y.get(t).y-m:Y.get(e).x+m}else c="TB"===F?30:"BT"===F?Y.get(t).y-m:0;const o="BT"===F&&l?c:c+h,y="TB"===F||"BT"===F?o:z.get(a.branch).pos,u="TB"===F||"BT"===F?z.get(a.branch).pos:o;if(r){let t,e=void 0!==a.customType&&""!==a.customType?a.customType:a.type;switch(e){case 0:default:t="commit-normal";break;case 1:t="commit-reverse";break;case 2:t="commit-highlight";break;case 3:t="commit-merge";break;case 4:t="commit-cherry-pick"}if(2===e){const e=n.append("rect");e.attr("x",u-10),e.attr("y",y-10),e.attr("height",20),e.attr("width",20),e.attr("class",`commit ${a.id} commit-highlight${z.get(a.branch).index%8} ${t}-outer`),n.append("rect").attr("x",u-6).attr("y",y-6).attr("height",12).attr("width",12).attr("class",`commit ${a.id} commit${z.get(a.branch).index%8} ${t}-inner`)}else if(4===e)n.append("circle").attr("cx",u).attr("cy",y).attr("r",10).attr("class",`commit ${a.id} ${t}`),n.append("circle").attr("cx",u-3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${a.id} ${t}`),n.append("circle").attr("cx",u+3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${a.id} ${t}`),n.append("line").attr("x1",u+3).attr("y1",y+1).attr("x2",u).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${a.id} ${t}`),n.append("line").attr("x1",u-3).attr("y1",y+1).attr("x2",u).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${a.id} ${t}`);else{const r=n.append("circle");if(r.attr("cx",u),r.attr("cy",y),r.attr("r",3===a.type?9:10),r.attr("class",`commit ${a.id} commit${z.get(a.branch).index%8}`),3===e){const e=n.append("circle");e.attr("cx",u),e.attr("cy",y),e.attr("r",6),e.attr("class",`commit ${t} ${a.id} commit${z.get(a.branch).index%8}`)}1===e&&n.append("path").attr("d",`M ${u-5},${y-5}L${u+5},${y+5}M${u-5},${y+5}L${u+5},${y-5}`).attr("class",`commit ${t} ${a.id} commit${z.get(a.branch).index%8}`)}}if("TB"===F||"BT"===F?Y.set(a.id,{x:u,y:o}):Y.set(a.id,{x:o,y}),r){const t=4,e=2;if(4!==a.type&&(a.customId&&3===a.type||3!==a.type)&&i.showCommitLabel){const r=s.append("g"),n=r.insert("rect").attr("class","commit-label-bkg"),l=r.append("text").attr("x",c).attr("y",y+25).attr("class","commit-label").text(a.id);let h=l.node().getBBox();if(n.attr("x",o-h.width/2-e).attr("y",y+13.5).attr("width",h.width+2*e).attr("height",h.height+2*e),"TB"===F||"BT"===F?(n.attr("x",u-(h.width+4*t+5)).attr("y",y-12),l.attr("x",u-(h.width+4*t)).attr("y",y+h.height-12)):l.attr("x",o-h.width/2),i.rotateCommitLabel)if("TB"===F||"BT"===F)l.attr("transform","rotate(-45, "+u+", "+y+")"),n.attr("transform","rotate(-45, "+u+", "+y+")");else{let t=-7.5-(h.width+10)/25*9.5,e=10+h.width/25*8.5;r.attr("transform","translate("+t+", "+e+") rotate(-45, "+c+", "+y+")")}}if(a.tags.length>0){let r=0,i=0,n=0;const l=[];for(const t of a.tags.reverse()){const e=s.insert("polygon"),a=s.append("circle"),c=s.append("text").attr("y",y-16-r).attr("class","tag-label").text(t);let h=c.node().getBBox();i=Math.max(i,h.width),n=Math.max(n,h.height),c.attr("x",o-h.width/2),l.push({tag:c,hole:a,rect:e,yOffset:r}),r+=20}for(const{tag:r,hole:a,rect:s,yOffset:m}of l){const l=n/2,g=y-19.2-m;if(s.attr("class","tag-label-bkg").attr("points",`\n            ${c-i/2-t/2},${g+e}\n            ${c-i/2-t/2},${g-e}\n            ${o-i/2-t},${g-l-e}\n            ${o+i/2+t},${g-l-e}\n            ${o+i/2+t},${g+l+e}\n            ${o-i/2-t},${g+l+e}`),a.attr("cy",g).attr("cx",c-i/2+t/2).attr("r",1.5).attr("class","tag-hole"),"TB"===F||"BT"===F){const n=c+m;s.attr("class","tag-label-bkg").attr("points",`\n              ${u},${n+e}\n              ${u},${n-e}\n              ${u+h},${n-l-e}\n              ${u+h+i+t},${n-l-e}\n              ${u+h+i+t},${n+l+e}\n              ${u+h},${n+l+e}`).attr("transform","translate(12,12) rotate(45, "+u+","+c+")"),a.attr("cx",u+t/2).attr("cy",n).attr("transform","translate(12,12) rotate(45, "+u+","+c+")"),r.attr("x",u+5).attr("y",n+3).attr("transform","translate(14,14) rotate(45, "+u+","+c+")")}}}}c="BT"===F&&l?c+m:c+m+h,c>q&&(q=c)}))}),"drawCommits"),Z=(0,a.K2)(((t,e,r,i,n)=>{const s=("TB"===F||"BT"===F?r.x<i.x:r.y<i.y)?e.branch:t.branch,c=(0,a.K2)((t=>t.branch===s),"isOnBranchToGetCurve"),o=(0,a.K2)((r=>r.seq>t.seq&&r.seq<e.seq),"isBetweenCommits");return[...n.values()].some((t=>o(t)&&c(t)))}),"shouldRerouteArrow"),tt=(0,a.K2)(((t,e,r=0)=>{const i=t+Math.abs(t-e)/2;if(r>5)return i;if(j.every((t=>Math.abs(t-i)>=10)))return j.push(i),i;const a=Math.abs(t-e);return tt(t,e-a/5,r+1)}),"findLane"),et=(0,a.K2)(((t,e,r,i)=>{const a=Y.get(e.id),n=Y.get(r.id),s=Z(e,r,a,n,i);let c,o="",l="",h=0,m=0,y=z.get(r.branch).index;if(3===r.type&&e.id!==r.parents[0]&&(y=z.get(e.branch).index),s){o="A 10 10, 0, 0, 0,",l="A 10 10, 0, 0, 1,",h=10,m=10;const t=a.y<n.y?tt(a.y,n.y):tt(n.y,a.y),r=a.x<n.x?tt(a.x,n.x):tt(n.x,a.x);"TB"===F?a.x<n.x?c=`M ${a.x} ${a.y} L ${r-h} ${a.y} ${l} ${r} ${a.y+m} L ${r} ${n.y-h} ${o} ${r+m} ${n.y} L ${n.x} ${n.y}`:(y=z.get(e.branch).index,c=`M ${a.x} ${a.y} L ${r+h} ${a.y} ${o} ${r} ${a.y+m} L ${r} ${n.y-h} ${l} ${r-m} ${n.y} L ${n.x} ${n.y}`):"BT"===F?a.x<n.x?c=`M ${a.x} ${a.y} L ${r-h} ${a.y} ${o} ${r} ${a.y-m} L ${r} ${n.y+h} ${l} ${r+m} ${n.y} L ${n.x} ${n.y}`:(y=z.get(e.branch).index,c=`M ${a.x} ${a.y} L ${r+h} ${a.y} ${l} ${r} ${a.y-m} L ${r} ${n.y+h} ${o} ${r-m} ${n.y} L ${n.x} ${n.y}`):a.y<n.y?c=`M ${a.x} ${a.y} L ${a.x} ${t-h} ${o} ${a.x+m} ${t} L ${n.x-h} ${t} ${l} ${n.x} ${t+m} L ${n.x} ${n.y}`:(y=z.get(e.branch).index,c=`M ${a.x} ${a.y} L ${a.x} ${t+h} ${l} ${a.x+m} ${t} L ${n.x-h} ${t} ${o} ${n.x} ${t-m} L ${n.x} ${n.y}`)}else o="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,"TB"===F?(a.x<n.x&&(c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${a.x} ${n.y-h} ${o} ${a.x+m} ${n.y} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${n.x-h} ${a.y} ${l} ${n.x} ${a.y+m} L ${n.x} ${n.y}`),a.x>n.x&&(o="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${a.x} ${n.y-h} ${l} ${a.x-m} ${n.y} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${n.x+h} ${a.y} ${o} ${n.x} ${a.y+m} L ${n.x} ${n.y}`),a.x===n.x&&(c=`M ${a.x} ${a.y} L ${n.x} ${n.y}`)):"BT"===F?(a.x<n.x&&(c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${a.x} ${n.y+h} ${l} ${a.x+m} ${n.y} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${n.x-h} ${a.y} ${o} ${n.x} ${a.y-m} L ${n.x} ${n.y}`),a.x>n.x&&(o="A 20 20, 0, 0, 0,",l="A 20 20, 0, 0, 1,",h=20,m=20,c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${a.x} ${n.y+h} ${o} ${a.x-m} ${n.y} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${n.x-h} ${a.y} ${o} ${n.x} ${a.y-m} L ${n.x} ${n.y}`),a.x===n.x&&(c=`M ${a.x} ${a.y} L ${n.x} ${n.y}`)):(a.y<n.y&&(c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${n.x-h} ${a.y} ${l} ${n.x} ${a.y+m} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${a.x} ${n.y-h} ${o} ${a.x+m} ${n.y} L ${n.x} ${n.y}`),a.y>n.y&&(c=3===r.type&&e.id!==r.parents[0]?`M ${a.x} ${a.y} L ${n.x-h} ${a.y} ${o} ${n.x} ${a.y-m} L ${n.x} ${n.y}`:`M ${a.x} ${a.y} L ${a.x} ${n.y+h} ${l} ${a.x+m} ${n.y} L ${n.x} ${n.y}`),a.y===n.y&&(c=`M ${a.x} ${a.y} L ${n.x} ${n.y}`));t.append("path").attr("d",c).attr("class","arrow arrow"+y%8)}),"drawArrow"),rt=(0,a.K2)(((t,e)=>{const r=t.append("g").attr("class","commit-arrows");[...e.keys()].forEach((t=>{const i=e.get(t);i.parents&&i.parents.length>0&&i.parents.forEach((t=>{et(r,e.get(t),i,e)}))}))}),"drawArrows"),it=(0,a.K2)(((t,e)=>{const r=(0,a.D7)().gitGraph,i=t.append("g");e.forEach(((t,e)=>{const a=e%8,n=z.get(t.name).pos,s=i.append("line");s.attr("x1",0),s.attr("y1",n),s.attr("x2",q),s.attr("y2",n),s.attr("class","branch branch"+a),"TB"===F?(s.attr("y1",30),s.attr("x1",n),s.attr("y2",q),s.attr("x2",n)):"BT"===F&&(s.attr("y1",q),s.attr("x1",n),s.attr("y2",30),s.attr("x2",n)),j.push(n);let c=t.name;const o=V(c),l=i.insert("rect"),h=i.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+a);h.node().appendChild(o);let m=o.getBBox();l.attr("class","branchLabelBkg label"+a).attr("rx",4).attr("ry",4).attr("x",-m.width-4-(!0===r.rotateCommitLabel?30:0)).attr("y",-m.height/2+8).attr("width",m.width+18).attr("height",m.height+4),h.attr("transform","translate("+(-m.width-14-(!0===r.rotateCommitLabel?30:0))+", "+(n-m.height/2-1)+")"),"TB"===F?(l.attr("x",n-m.width/2-10).attr("y",0),h.attr("transform","translate("+(n-m.width/2-5)+", 0)")):"BT"===F?(l.attr("x",n-m.width/2-10).attr("y",q),h.attr("transform","translate("+(n-m.width/2-5)+", "+q+")")):l.attr("transform","translate(-19, "+(n-m.height/2)+")")}))}),"drawBranches"),at=(0,a.K2)((function(t,e,r,s){U();const c=(0,a.D7)(),o=c.gitGraph;a.Rm.debug("in gitgraph renderer",t+"\n","id:",e,r),H=s.db.getCommits();const l=s.db.getBranchesAsObjArray();F=s.db.getDirection();const h=(0,n.Ltv)(`[id="${e}"]`);let m=0;l.forEach(((t,e)=>{const r=V(t.name),i=h.append("g"),a=i.insert("g").attr("class","branchLabel"),n=a.insert("g").attr("class","label branch-label");n.node().appendChild(r);let s=r.getBBox();z.set(t.name,{pos:m,index:e}),m+=50+(o.rotateCommitLabel?40:0)+("TB"===F||"BT"===F?s.width/2:0),n.remove(),a.remove(),i.remove()})),X(h,H,!1),o.showBranches&&it(h,l),rt(h,H),X(h,H,!0),i._K.insertTitle(h,"gitTitleText",o.titleTopMargin,s.db.getDiagramTitle()),(0,a.mj)(void 0,h,o.diagramPadding,o.useMaxWidth??c.useMaxWidth)}),"draw"),nt={parser:c,db:G,renderer:{draw:at},styles:(0,a.K2)((t=>`\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0,1,2,3,4,5,6,7].map((e=>`\n        .branch-label${e} { fill: ${t["gitBranchLabel"+e]}; }\n        .commit${e} { stroke: ${t["git"+e]}; fill: ${t["git"+e]}; }\n        .commit-highlight${e} { stroke: ${t["gitInv"+e]}; fill: ${t["gitInv"+e]}; }\n        .label${e}  { fill: ${t["git"+e]}; }\n        .arrow${e} { stroke: ${t["git"+e]}; }\n        `)).join("\n")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${t.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${t.commitLabelFontSize}; fill: ${t.commitLabelColor};}\n  .commit-label-bkg { font-size: ${t.commitLabelFontSize}; fill: ${t.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${t.tagLabelFontSize}; fill: ${t.tagLabelColor};}\n  .tag-label-bkg { fill: ${t.tagLabelBackground}; stroke: ${t.tagLabelBorder}; }\n  .tag-hole { fill: ${t.textColor}; }\n\n  .commit-merge {\n    stroke: ${t.primaryColor};\n    fill: ${t.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${t.primaryColor};\n    fill: ${t.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${t.primaryColor};\n    fill: ${t.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${t.textColor};\n  }\n`),"getStyles")}}};